{"version":3,"sources":["Components/auth/authOptions.js","Context.js","Components/Menu.js","Components/event/EventList.js","Components/event/MyEvents.js","Components/Error.js","Components/event/NewEvent.js","Components/auth/Login.js","Components/auth/Register.js","Components/Admin/Events.js","Components/Admin/Users.js","Components/event/EditEvent.js","App.js","serviceWorker.js","index.js"],"names":["AuthOptions","history","useHistory","className","onClick","push","createContext","Menu","useContext","Context","setUser","user","myContext","console","log","href","token","role","Fragment","key","to","localStorage","clear","EventList","useState","data","setData","useEffect","axios","get","then","resp","length","err","alert","map","event","_id","src","imageUrl","alt","title","date","organizer","username","description","type","value","id","attending","includes","eventId","put","headers","getItem","window","location","reload","error","eventForEdit","MyEvents","myEvents","setMyEvents","data-toggle","data-target","aria-expanded","aria-controls","bookings","email","Error","style","Component","fontSize","NewEvent","props","state","handletitle","bind","handledate","handleimg","handledescription","handleSubmit","this","target","setState","post","placeholder","onChange","required","rows","React","Login","setEmail","password","setPassword","htlmfor","e","setItem","JSON","stringify","s","Register","setUsername","message","setUserData","color","response","submit","Events","events","setEvents","Axios","catch","delete","res","Users","users","setUsers","scope","colSpan","EditEvent","setEvent","updateEvent","deleteEvent","Routing","currentUser","parse","currentToken","exact","path","component","App","useMemo","Provider","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.941e0b8a.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n export default function AuthOptions() {\r\n    const history = useHistory();\r\n    const register =()=>{\r\n        history.push('/signin')\r\n    } \r\n    const login =()=> {\r\n        history.push('/signup')\r\n    }\r\n    return(\r\n        <form className='form-inline'>\r\n            <button className=\"btn btn-default text-primary text-uppercase\" onClick={register}>Login</button>\r\n            <button className=\"btn btn-default text-primary text-uppercase\" onClick={login}>Register</button>\r\n        </form>\r\n    );\r\n}\r\n","import React, { createContext } from 'react'\r\n\r\nexport default createContext({});","\r\nimport React,{useContext} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport AuthOptions from './auth/authOptions';\r\n\r\nimport Context from '../Context';\r\n\r\n\r\nexport default function Menu() {\r\n   \r\n   let { user, setUser } = useContext(Context);\r\n  let myContext = useContext(Context)\r\n   const history = useHistory()\r\n   console.log(myContext.user.user)\r\n    return (\r\n        \r\n    \r\n        <nav className='navbar navbar-dark bg-dark'>\r\n            <a href='#' className='navbar-brand'><p className=\"font-italic font-weight-bold text-primary\">EVENTS</p></a>\r\n            <ul className=' nav justify-content-center nav-pills nav-fill pl-4'>\r\n            \r\n        {/**  {renderList()} */}\r\n            { myContext.user.token ==null ?(\r\n                <AuthOptions />\r\n            ):(\r\n                myContext.user.user.role == 'admin' ?(\r\n                    <React.Fragment>\r\n                        <li key = '1' className='nav-item flex-sm-fill text-sm-center font-weight-bold text-uppercase'><Link to='/admin/all-events' className='nav-link'>Events</Link></li>\r\n                        <li key = '2' className='nav-item flex-sm-fill text-sm-center font-weight-bold text-uppercase' ><Link to='/admin/all-users' className='nav-link'>Users</Link></li>\r\n                        <button className=\"btn btn-default text-primary text-uppercase\" onClick={()=>{\r\n                        localStorage.clear()\r\n                         setUser({token:null,user:null})\r\n                        history.push('/')\r\n                    }}>Logout</button> \r\n                    </React.Fragment> \r\n                ) :(\r\n                    <React.Fragment>\r\n                                \r\n                    <li key = '1' className='nav-item flex-sm-fill text-sm-center font-weight-bold text-uppercase'><Link to='/' className='nav-link'>Events</Link></li>\r\n                    <li className='nav-item flex-sm-fill text-sm-center font-weight-bold text-uppercase' ><Link to='/new-event' className='nav-link'>Add event</Link></li>\r\n                    <li className='nav-item flex-sm-fill text-sm-center font-weight-bold text-uppercase' ><Link to='/attending' className='nav-link'>Attending</Link></li>\r\n                  {/**   <li className='nav-item flex-sm-fill text-sm-center font-weight-bold text-uppercase'><Link to='/my_events' className='nav-link'>My Events</Link></li> */}\r\n                    <button className=\"btn btn-default text-primary text-uppercase\" onClick={()=>{\r\n                         localStorage.clear()\r\n                        setUser({token:null,user:null})\r\n                        history.push('/')\r\n                    }}>Logout</button> \r\n                    \r\n                    \r\n                    </React.Fragment>\r\n                )\r\n            )}\r\n            \r\n            \r\n                \r\n                {  myContext.token !==null ? (\r\n                    <li className='nav-item flex-sm-fill text-sm-center nav-link'>\r\n                    \r\n                </li>\r\n                ): <li></li>}\r\n                \r\n        </ul>\r\n        </nav>\r\n \r\n       \r\n    )\r\n}\r\n","import React, { useEffect,useState, useContext } from 'react'\r\nimport axios from 'axios';\r\nimport Context from '../../Context'\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport let currentUserId ;\r\nexport default function EventList() {\r\n    const [data,setData] = useState([]);\r\n  const  { user, setUser } = useContext(Context)\r\n\r\nconst history = useHistory();\r\n    useEffect(()=>{\r\n       // console.log(user)\r\n     \r\n        try{\r\n            axios.get('http://localhost:4200/api/event/').then(\r\n                resp =>{\r\n                        //console.log(resp.data)\r\n                    if( (resp.data.length)>0) {\r\n                        setData((resp.data));\r\n                      //  console.log(resp.data)\r\n                       }\r\n                    })\r\n           \r\n        }catch (err){\r\n            alert('Errror! could not fetch events')\r\n        }\r\n    },[])\r\n        const bookEvent = () =>{\r\n            let _id = user.user._id;\r\n\r\n        }\r\n        return (<React.Fragment>\r\n            <div className='row'>\r\n             { \r\n                data.map(event =>{\r\n                    return (\r\n                        < div className='col-sm-12 col-md-4 col-4' key={event._id}>\r\n                        <div className='card'>\r\n                            <img className='card-image' src={event.imageUrl} alt='image'/>\r\n                            <div className=\"card_body\">\r\n                    <h5 className='text-uppercase'>{event.title}</h5>\r\n                    <div className='row'>\r\n                        <div className='col-sm-12 col-md-6'><p>Date: {event.date}</p></div> { event.organizer !== null ? (\r\n                             <div className='col-sm-12 col-md-6'><p className='text-capitalize'>Organized by: {event.organizer.username}</p></div>\r\n                        ):(\r\n                            <div></div>\r\n                        )}\r\n                       \r\n                    </div>\r\n                    \r\n                    <p className='text-capitalize text-center'>{event.description}</p>\r\n                    {\r\n                        user.user ==null ? (\r\n                            <React.Fragment>\r\n                               <Link to='/signin'> <input type='submit' value='Sign In To Attend' className='btn btn-primary'/></Link> \r\n                            </React.Fragment>\r\n                        ):(\r\n                            event.organizer !== null ? (\r\n                                user.user.id === event.organizer._id ? (\r\n                                    <React.Fragment>\r\n                                         <div className='row'>\r\n                                         <div className='col-sm-12 col-md-12'><p className='text-capitalize bg-primary'>You are the organizer </p></div>\r\n             \r\n                                     </div>\r\n                                    </React.Fragment>\r\n                            ):(\r\n                                <div></div>\r\n                            )\r\n                          \r\n                           ):(\r\n                              event.attending.includes(user.user.id) ?(\r\n                                  \r\n                                  <React.Fragment>\r\n                                      <p className='text-capitalize bg-primary'>you are attending this</p>\r\n                                  </React.Fragment>\r\n                              ):(\r\n                                  <React.Fragment>\r\n                                      <button className='btn btn-primary text-capitalize' onClick={\r\n                                          ()=>{\r\n                                            let eventId = event._id\r\n                                            axios.put('http://localhost:4200/api/event/book',{eventId},\r\n                                            {\r\n                                                headers: {\r\n                                                    'Authorization':'Bearer ' + localStorage.getItem('auth-token')\r\n                                                }\r\n                                            }\r\n                                            ).then(\r\n                                                resp=>{\r\n                                                   // console.log(resp)\r\n                                                    //myBookings.push(event)\r\n                                                    currentUserId = user.user._id\r\n                                                    window.location.reload()\r\n                                                },error =>{\r\n                                                    console.log(error)\r\n                                                }\r\n                                            )\r\n                                          }\r\n                                      }>attend</button>\r\n                                  </React.Fragment>\r\n                              )\r\n                           )\r\n                        )\r\n                    }\r\n                    \r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    )\r\n                }) }\r\n            </div>\r\n        </React.Fragment>\r\n           \r\n        )\r\n}\r\n\r\n","import React, { useState, useEffect ,useContext} from 'react'\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Context from '../../Context'\r\n\r\nexport let eventForEdit ={};\r\nexport default function MyEvents (){\r\n    let [myEvents, setMyEvents] = useState([])\r\n    const  { user, setUser } = useContext(Context)\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(()=>{\r\n        if(user.user == null || user.user.role == 'admin'){\r\n            history.push('/login')\r\n        }\r\n        axios.get('http://localhost:4200/api/event/my_events',\r\n        {\r\n            headers: {\r\n                'Authorization':'Bearer ' + localStorage.getItem('auth-token')\r\n            }\r\n        }\r\n        ).then(\r\n            resp =>{\r\n               // console.log(resp.data.length>0)\r\n                if(resp.data.length>0){\r\n                    setMyEvents(resp.data)\r\n                }\r\n            }\r\n        )\r\n\r\n    },[])\r\n    \r\n        return (\r\n            <React.Fragment>\r\n               <div className='row'>\r\n             { myEvents.length > 0? (\r\n                 <React.Fragment>\r\n                     \r\n                       { myEvents.map(event =>{\r\n                            return (\r\n                        < div className='col-sm-12 col-md-4 col-4' key={event._id}>\r\n                        <div className='card'>\r\n                            <img className='card-image' src={event.imageUrl} alt='image'/>\r\n                            <div className=\"card_body\">\r\n                    <h5 className='text-uppercase'>{event.title}</h5>\r\n                   \r\n                        <div className='col-sm-12 col-md-6'><p>Date: {event.date}</p></div>\r\n                        \r\n                    \r\n                    <p className='text-capitalize'>{event.description}</p>\r\n                    <div className='card-action'>\r\n                        <button className='btn btn-primary text-capitalize' type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">see who booked</button>\r\n                        \r\n                        <div className=\"collapse\" id=\"collapseExample\">\r\n                        <table className='table table-bordered'>\r\n                            <thead>\r\n                            \r\n                                <tr>\r\n                                    <th>User Name</th>\r\n                                    <th>User Email</th>\r\n                                </tr>\r\n                            \r\n                            </thead>\r\n                            \r\n                            <tbody>\r\n                            { event.attending.length >0 ?(\r\n                                event.attending.map( bookings=>{\r\n                                    return (\r\n                                    <tr>\r\n                                    <td className='text-capitalize'>{bookings.username}</td>\r\n                                    <td>{bookings.email}</td>\r\n                                </tr>)\r\n                                })\r\n                                \r\n                            ):(\r\n                                <tr><td>no bookings yet</td>t</tr>\r\n                            )\r\n                            }\r\n                            </tbody>\r\n                            \r\n                        </table></div>\r\n                    <button className='btn btn-primary' onClick={\r\n                                        ()=> {\r\n                                            eventForEdit=event\r\n                                            history.push('/edit-event')\r\n                                        }\r\n                                    }>Edit/Delete Event</button>\r\n                    </div>\r\n                    \r\n                    \r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    )\r\n                }) }\r\n                     \r\n                 </React.Fragment>\r\n             ):(\r\n                 <p className='text-center text-capitalize'>You have not added any events yet</p>\r\n             )\r\n             }\r\n            </div>\r\n            </React.Fragment>\r\n        )\r\n    \r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Error extends Component {\r\n   \r\n    render() {\r\n        return (\r\n            <div style={style}>\r\n              <p className='text-center text-capitalize font-weight-bold text-monospace'>Error 404! </p>  \r\n              <p className='text-center text-capitalize font-weight-bold text-monospace'> Page non found</p>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst style ={\r\n    fontSize:'50px'\r\n}","import React from 'react';\r\nimport '../css/styles.css';\r\nimport axios from 'axios';\r\n\r\nclass NewEvent extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            title:\"\",\r\n            imageUrl:\"\",\r\n            date:\"\",\r\n            description:\"\"\r\n        }\r\n        this.handletitle=this.handletitle.bind(this);\r\n        this.state.handledate= this.handledate.bind(this);\r\n        this.state.handleimg= this.handleimg.bind(this);\r\n        this.state.handledescription = this.handledescription.bind(this);\r\n        this.state.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n   \r\n    handletitle(event){\r\n        let title= this.state.title;\r\n        title= event.target.value;\r\n        this.setState({\r\n            title\r\n        })\r\n       // console.log(this.state)\r\n    }\r\n    handledate(event){\r\n        let date= this.state.date;\r\n        date= event.target.value;\r\n        this.setState({\r\n            date\r\n        })\r\n    }\r\n    handleimg(event){\r\n        let imageUrl= this.state.imageUrl;\r\n        imageUrl= event.target.value;\r\n        this.setState({\r\n            imageUrl\r\n        })\r\n    }\r\n    handledescription(event){\r\n        let description= this.state.description;\r\n        description= event.target.value;\r\n        this.setState({\r\n            description\r\n        })\r\n    }\r\n    handleSubmit(){\r\n        let {title,imageUrl,description,date} = this.state;\r\n     /*   if(title.trim.length===0 || imageUrl.trim.length ===0 || date.trim.length ===0 || description.trim.length ===0 ){\r\n            return ;\r\n        } */\r\n        axios.post('http://localhost:4200/api/event/new', {\r\n            title,date,imageUrl,description\r\n        },\r\n        {\r\n            headers: {\r\n                'Authorization':'Bearer ' + localStorage.getItem('auth-token')\r\n                \r\n\r\n            }\r\n        }).then(\r\n            resp=>{\r\n                console.log(resp.data)\r\n                window.location.reload(true); \r\n               // history.pus('/')\r\n            },\r\n            error=>{\r\n               alert('an error occured try refreshing the page and try again')\r\n            }\r\n        )\r\n        \r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <section className='row justify-content-center'>\r\n                    <div className='col-12'>\r\n                        <h2 className='font-weight-bold text-uppercase text-center '>new event</h2>\r\n                    </div>\r\n                </section>\r\n                <section className=\"row justify-content-center\">\r\n                    <section className='col-12 col-md-8 col-sm-6'>\r\n                        <div className='s-form-container'>\r\n                            <div className=\"form-row form-group\">\r\n                                 <div className=\"col\">\r\n                                     <label >Event Title</label>\r\n                                     <input type=\"text\" className=\"form-control\" placeholder=\"Event Title\" onChange={this.handletitle} required/>\r\n                                </div>\r\n                           </div>\r\n                           <div className=\"form-row form-group\">\r\n                            <div className=\"col\">\r\n                                <label>Date</label>\r\n                                    <input type=\"date\" className=\"form-control\" placeholder=\"date\"  required onChange={this.state.handledate}/>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                     <label> Event Image</label>\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\" Image url\" required onChange={this.state.handleimg}/>\r\n                                </div>\r\n                           </div>\r\n                           <div className=\"form-row form-group\">\r\n                           <div className=\"col\">\r\n                           <label>Description</label>\r\n                                <textarea type=\"text\" className=\"form-control\" rows={5} placeholder=\"Description\" required onChange={this.state.handledescription}/>\r\n                             </div>\r\n                             \r\n                           </div>\r\n                           <button className='btn btn-primary text-uppercase'  onClick={this.state.handleSubmit}>Add event</button>\r\n                     </div>\r\n                    </section>\r\n                </section>\r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewEvent;","import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Context from \"../../Context\";\nimport axios from \"axios\"; \n\n\nexport default function Login() {\n // const {state,dispatch} = useContext(UserContext)\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  //let [message, setMessage] = useState('');\n\n  //const { token,user } = useContext(Context);\n  //let history = useHistory();\n  let  { user, setUser } = useContext(Context);\n  \n  let s = () => {\n    //e.preventDefault();\n    try {\n    // const loginUser = { email, password };\n     axios.post(\n        \"http://localhost:4200/api/user/login\",\n        {email:email, password:password}\n      ).then(\n        resp=>{\n          localStorage.setItem(\"auth-token\", resp.data.token);\n           localStorage.setItem(\"user\", JSON.stringify(resp.data.user));\n          \n         // contextType.login(JSON.stringify(resp.data.user),resp.data.token)\n          setUser({\n            token:localStorage.getItem(\"auth-token\"),\n            user:localStorage.getItem(\"user\")\n          })\n         \n          console.log(user)\n          window.location.reload(true); \n         // history.push(\"/\")\n         }, (error) =>{\n           alert('invalid username or password')\n           //console.log(error)\n         }\n        \n           //setError('signed in successfully');\n           \n           //\n          // history.push(\"/\");\n      )\n     \n    \n      \n     \n    } catch (err) {\n      alert('wrong username or password!')\n    }\n  };\n  return (\n    <div className=''>\n                <h2 className='font-weight-bold text-uppercase text-center'>log in</h2>\n            {/**  <p> {error && (\n            <ErrorNotice message={error} clearError={() => setError(undefined)} />\n         {/**  )} </p> */} \n                    \n                    <section className=\"row justify-content-center\">\n                    <section className='col-12 col-md-3 col-sm-6'>\n                    <div className='form-container'>\n                        <div className=\"form-group\">\n                        <label htlmfor=\"inputEmail\">Email address</label>\n                        <input type=\"email\" className=\"form-control\" id=\"inputEmail\"  placeholder=\"Enter email\" onChange={(e) => setEmail(e.target.value)}/>\n                        </div>\n                        <div className=\"form-group\">\n                    <label htlmfor=\"inputPassword\">Password</label>\n                    <input type=\"password\" className=\"form-control\" id=\"inputPassword\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)}/>\n                    \n                    </div>\n                    <button className='btn btn-primary btn-block' onClick={()=>s()}>Login</button>\n                        </div>\n                        <p>Don't have an account? <Link to='signup' >Sign up</Link></p>\n                        \n                    </section>\n                    </section>\n            </div>\n        \n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Context from \"../../Context\";\nimport axios  from \"axios\";\n\nimport ErrorNotice from \"../ErrorNotice\";\n\nexport default function Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n \n  const [username, setUsername] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const { setUserData } = useContext(Context);\n  const history = useHistory();\n\n  const submit =  () => {\n   \n\n    try {\n      //const newUser = { email, password, username,role:'user' };\n      /*if(email.trim.length==0 || password.trim.length==0 || username.trim.length==0 ){\n        return ;\n      }*/\n     axios.post(\"http://localhost:4200/api/user/signup\",{username:username,password:password,email:email,role:'user'}).then(\n          response=>{\n            console.log(response)\n            history.push(\"/signin\")\n          }, (error)=>{\n            alert('unable to create account. please try again with valid credentials')\n          }\n        )\n   /*  const loginRes =  Axios.post(\"http://localhost:4200/api/user/login\", {\n        email,\n        password,\n      });\n      setUserData({\n        token: loginRes.data.token,\n        user: loginRes.data.user,\n      });\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n      history.push(\"/\");*/\n    } catch (err) {\n      //err.response.data.msg && setError(err.response.data.msg);\n      console.log(err)\n    }\n  };\n\n  return (\n    < React.Fragment>\n    \n               <section className='row justify-content-center'>\n                <div className='col-12'>\n                        <h2 className='font-weight-bold text-uppercase text-center '>sign up</h2>\n                        </div>\n                        <p style={{color:'red'}} className='text-center text-capitalize'>{message} </p>\n               </section>\n          \n                 <section className='row justify-content-center'>\n                   \n                     <div className=\"col-12 col-md-8 col-sm-7\" >\n                     <div className='s-form-container'>\n                        \n                        <div className=\"form-group\">\n                        <label htlmfor=\"inputEmail\">Email address</label>\n                        <input type=\"email\" value={email} className=\"form-control\" id=\"inputEmail\"  placeholder=\"Enter email\" onChange={(e) => setEmail(e.target.value)}/>\n                        </div>\n                        <div className=\"form-group \">\n                    <label  htlmfor=\"username\">User Name</label>\n                        <input type=\"text\" value={username} className=\"form-control\" id=\"username\" onChange={(e) => setUsername(e.target.value)}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htlmfor=\"inputPassword\">Password</label>\n                        <input type=\"password\" value={password} className=\"form-control\" id=\"inputPassword\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)}/>\n                    </div>\n                   {/* <div className=\"form-group \">\n                    <label  for=\"confirmPassword\">Confirm Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"confirmPassword\"/>\n            </div> */ }\n                <button  className=\"btn btn-primary btn-block\" onClick={()=>submit()}>Sign up</button>\n                       \n                     </div>\n                    </div>\n                </section>\n           </React.Fragment>\n  );\n}\n","import React, { useState, useEffect,useContext } from 'react';\r\nimport Axios from 'axios';\r\nimport Context from '../../Context'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Events (){\r\n    let [events,setEvents]= useState([])\r\n    const  { user, setUser } = useContext(Context)\r\n    const history = useHistory()\r\n    useEffect(()=>{\r\n        if(user.user == null || user.user.role=='user'){\r\n            history.push('/')\r\n        }\r\n        Axios.get(\"http://localhost:4200/api/event/\").then(\r\n            resp =>{\r\n              \r\n              setEvents (resp.data) \r\n            }  ,error =>{\r\n                console.log(error)\r\n            } \r\n        ).catch(error =>{\r\n            console.log(error)\r\n        }\r\n             \r\n            )\r\n    })\r\n     \r\n  \r\n        return (\r\n            <React.Fragment>\r\n                { events.length>0 ?(\r\n                    <React.Fragment>\r\n                        <div className='row'>\r\n                        {events.map(event =>{\r\n                             return ( \r\n                                <div className='col-sm-12 col-md-4 col-4' key={event._id}>\r\n                                        <div className='card'>\r\n                                            <img src={event.imageUrl} alt='image'/>\r\n                                            <div className=\"card_body\">\r\n                                            <h5 className='text-uppercase text-center'>{event.title}</h5>\r\n                                            <p className='text-capitalize text-center'>{event.date}</p>\r\n                                            <p className='text-capitalize text-center'>{event.description}</p>\r\n                                            <button className=\"btn btn-primary\" onClick={ ()=>{\r\n                                                Axios.delete(`http://localhost:4200/api/event/${event._id}`,\r\n                                                {headers: {\r\n                                                    'Authorization':'Bearer ' + localStorage.getItem('auth-token')\r\n                                                    \r\n                                        \r\n                                                }}\r\n                                                ).then(\r\n                                                    res=>{\r\n                                                        window.location.reload();\r\n                                                    }\r\n                                                ).catch(err =>{\r\n                                                   alert('something went wrong. please reloading and try again')\r\n                                                })\r\n                                            }\r\n                                                \r\n                                            }>Delete</button>\r\n                                                    </div>\r\n                                          </div>\r\n\r\n                                </div>\r\n                              \r\n                                      \r\n                            )\r\n                                })} \r\n                         </div>\r\n                    </React.Fragment>\r\n                ):(\r\n                    <h3 className='text-center text-uppercase '>there are currently no events </h3>\r\n                )}\r\n            </React.Fragment>\r\n            \r\n        )\r\n}","import React, { useState, useEffect,useContext } from 'react';\r\nimport Axios from 'axios';\r\nimport Context from '../../Context'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Users (){\r\n    let [users,setUsers]= useState([])\r\n   const  { user, setUser } = useContext(Context)\r\n    const history = useHistory()\r\n    useEffect(()=>{\r\n        if(localStorage.getItem('user') == false || localStorage.getItem('user').role=='user'){\r\n            \r\n            history.push('/')\r\n        }\r\n        Axios.get(\"http://localhost:4200/api/user/\").then(\r\n            resp =>{\r\n              \r\n             setUsers (resp.data.users) \r\n            // console.log(resp.data)\r\n            }  ,error =>{\r\n                alert('an error occured. please refresh the page and try again')\r\n            } \r\n        ).catch(error =>{\r\n            console.log(error)\r\n        }\r\n             \r\n            )\r\n    })\r\n     \r\n  \r\n        return (\r\n            <React.Fragment>\r\n                <table className='table table-'>\r\n                <thead>\r\n                    <tr>\r\n                    \r\n                    <th scope=\"col\">User Name</th>\r\n                    <th scope=\"col\">Email</th>\r\n                    <th scope=\"col\"></th>\r\n                    \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.length > 0 ?(\r\n                        users.map(user =>{\r\n                            return (\r\n                                <React.Fragment key={user._id}>\r\n                                    <tr >\r\n                                        <td>{user.username}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td><button onClick={\r\n                                            ()=>{\r\n                                                Axios.delete(`http://localhost:4200/api/user/${user._id}`).then(\r\n                                                    res=>{\r\n                                                        console.log(res)\r\n                                                      /*  Axios.delete('http://localhost:4200/api/event/dropby',{id:user._id},\r\n                                                        {\r\n                                                            headers: {\r\n                                                                'Authorization':'Bearer ' + localStorage.getItem('auth-token')\r\n                                                            }\r\n                                                        }\r\n                                                        ).then(\r\n                                                            resp=>{\r\n                                                                console.log(resp)\r\n                                                            }\r\n\r\n                                                        )*/\r\n                                                    },error=> {alert(`${error}`)}\r\n                                                )\r\n                                            }\r\n                                        }>Delete</button></td>\r\n                                    </tr>\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    ):(\r\n                        <tr colSpan={3} >\r\n                            <td className='text-center text-uppercase'>there are currently no users</td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n                </table>\r\n                \r\n            </React.Fragment>\r\n            \r\n        )\r\n}","import React, { useState,useContext, useEffect } from 'react';\r\nimport {eventForEdit} from './MyEvents';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Context from '../../Context'\r\n\r\n\r\nexport default function EditEvent (){\r\n    const history = useHistory()\r\n    let [event,setEvent] = useState({});\r\n    const  { user, setUser } = useContext(Context)\r\n    useEffect(()=>{\r\n        if(user.user == null || user.user.role == 'admin'){\r\n            history.push('/login')\r\n        }\r\n    },[])\r\n    const updateEvent =()=>{\r\n        let {title,imageUrl,description,date} = event\r\n        let _id = eventForEdit._id;\r\n        axios.put('http://localhost:4200/api/event/update',{title,imageUrl,description,date,_id},\r\n        {headers: {\r\n            'Authorization':'Bearer ' + localStorage.getItem('auth-token')\r\n            \r\n\r\n        }}\r\n        ).then(\r\n            resp=>{\r\n                console.log(resp.data)\r\n                history.push('/')\r\n            },error =>{\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n    const deleteEvent =()=>{\r\n        let _id = eventForEdit._id;\r\n        axios.delete(`http://localhost:4200/api/event/${_id}`,\r\n        {headers: {\r\n            'Authorization':'Bearer ' + localStorage.getItem('auth-token')\r\n            \r\n\r\n        }}\r\n        ).then(\r\n            resp=>{\r\n                console.log(resp.data)\r\n                history.push('/')\r\n            },err => console.log(err)\r\n        )\r\n    }\r\n   // console.log(eventForEdit)\r\n   \r\n   \r\n   let {title,imageUrl,description,date} = eventForEdit;\r\n    return(\r\n       <> \r\n        <section className='row justify-content-center'>\r\n        <div className='col-12'>\r\n            <h2 className='font-weight-bold text-uppercase text-center '>Edit event</h2>\r\n        </div>\r\n    </section>\r\n    <section className=\"row justify-content-center\">\r\n        <section className='col-12 col-md-8 col-sm-6'>\r\n            <div className='s-form-container'>\r\n                <div className=\"form-row form-group\">\r\n                     <div className=\"col\">\r\n                         <label >Event Title</label>\r\n                         <input type=\"text\" className=\"form-control\" placeholder={title}  onChange={(e)=>{\r\n                             setEvent({title:e.target.value})\r\n                         }\r\n                         } required/>\r\n                    </div>\r\n               </div>\r\n               <div className=\"form-row form-group\">\r\n                <div className=\"col\">\r\n                    <label>Date</label>\r\n                        <input type=\"date\" className=\"form-control\" placeholder={date} \r\n                        onChange ={\r\n                            (e)=> setEvent({date:e.target.value})\r\n                        }\r\n                         required/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                         <label> Event Image</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder={imageUrl}  onChange={\r\n                            (e)=> setEvent({imageUrl:e.target.value})\r\n                        } required />\r\n                    </div>\r\n               </div>\r\n               <div className=\"form-row form-group\">\r\n               <div className=\"col\">\r\n               <label>Description</label>\r\n                    <textarea type=\"text\" className=\"form-control\" rows={5} placeholder={description}  onChange={\r\n                        (e)=> setEvent({description:e.target.value})\r\n                    } required />\r\n                 </div>\r\n                 \r\n               </div>\r\n               <div className='row'>\r\n                   <div className='col-md-3 col-3'>\r\n                   <button className='btn btn-primary text-uppercase' onClick={()=>updateEvent()} >Save update</button>\r\n                   </div>\r\n              \r\n               <div className='col-md-3 col-3'>\r\n                <button className='btn btn-primary text-uppercase' onClick={()=>deleteEvent()}>delete event</button>\r\n               </div>\r\n               \r\n               </div>\r\n               \r\n         </div>\r\n        </section>\r\n    </section>\r\n\r\n</>\r\n    )\r\n}\r\n","import React, {useState,useEffect, useContext,useMemo} from 'react';\n\nimport Menu from './Components/Menu';\n//import Events_Attending from './Components/event/Events_Attending';\nimport EventList from './Components/event/EventList';\nimport MyEvents from './Components/event/MyEvents';\n\nimport {Switch,Route,useHistory} from 'react-router-dom';\nimport Error from './Components/Error'; \nimport NewEvent from './Components/event/NewEvent';\nimport Context from './Context';\nimport Login from './Components/auth/Login';\nimport Register from './Components/auth/Register';\nimport Events from './Components/Admin/Events'\nimport Users from './Components/Admin/Users';\nimport EditEvent from './Components/event/EditEvent';\n\n\n\n  const Routing =()=>{\n  const history= useHistory()\n  let {user,setUser} = useContext(Context)\n useEffect(()=>{\n   const currentUser = JSON.parse(localStorage.getItem('user'))\n   const currentToken = localStorage.getItem('auth-token')\n   //console.log(' user for app js ', user)\n  if(currentUser && currentToken ){\n    //dispatch({type:'USER',payload:user})\n    setUser({token:currentToken,user:currentUser})\n    if(currentUser.role=='user'){\n      history.push('/')\n    }\n    else if (currentUser.role =='admin'){\n      history.push('/admin/all-events')\n    }\n    //token= currentToken\n    \n\n  } \n },[])\n  return(\n    <Switch>\n      <Route exact path='/' component={EventList}/>\n       {/* <Route path='/attending' component={Events_Attending}/>*/}\n        <Route path='/my_events' component={MyEvents}/>\n        <Route path='/signin' component={Login}/>\n        <Route path='/signup' component={Register}/>\n        <Route path='/new-event' component={NewEvent}/>\n        <Route path=\"/admin/all-events\" component={Events}/>\n        <Route path=\"/admin/all-users\" component={Users}/>\n        <Route path='/edit-event' component={EditEvent}/>\n        <Route component={Error}/>\n    </Switch>\n    \n  )\n}\n\nfunction App() {\n // const history = useHistory()\n  //const [state,dispatch] = useReducer(reducer,initialState)\n  //const user=localStorage.getItem('user')\n  //const token = localStorage.getItem('auth-token')z\n  let [user,setUser] = useState({token:null,user:null})\n  //let {user,setUser} = useState({})\n  const value = useMemo(() => ({ user, setUser }), [user, setUser]);\n\n\n  /*const login = (token,user) =>{\n    setData({\n      token: token,\n      user:user\n    })\n  }\n  const logout = (token,user) =>{\n    setData({\n      token:null,\n      user:null\n    })\n  }*/\n  return (\n    <div className=\"container\">\n      <Context.Provider value={value}>\n        <Menu/>\n        <Routing/>\n      </Context.Provider>  \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\n//import 'bootstrap/dist/css/bootstrap.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}